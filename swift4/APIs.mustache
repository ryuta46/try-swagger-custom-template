// APIs.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

class {{projectName}}API {
    let basePath: String
    let credential: URLCredential?
    let customHeaders: [String:String]
    let requestBuilderFactory: RequestBuilderFactory = AlamofireRequestBuilderFactory()

    init(basePath: String = "{{{basePath}}}", credential: URLCredential? = nil, customHeaders: [String:String] = [:]) {
        self.basePath = basePath
        self.credential = credential
        self.customHeaders = customHeaders
    }
}

class RequestBuilder<T> {
    let api: {{projectName}}API
    var credential: URLCredential?
    var headers: [String:String]
    let parameters: [String:Any]?
    let isBody: Bool
    let method: String
    let URLString: String

    /// Optional block to obtain a reference to the request's progress instance when available.
    var onProgressReady: ((Progress) -> ())?

    required init(api: {{projectName}}API, method: String, URLString: String, parameters: [String:Any]?, isBody: Bool, headers: [String:String] = [:]) {
        self.api = api
        self.method = method
        self.URLString = URLString
        self.parameters = parameters
        self.isBody = isBody
        self.headers = headers

        addHeaders(api.customHeaders)
    }

    func addHeaders(_ aHeaders:[String:String]) {
        for (header, value) in aHeaders {
            headers[header] = value
        }
    }

    func execute(_ completion: @escaping (_ response: Response<T>?, _ error: Error?) -> Void) { }

    func addHeader(name: String, value: String) -> Self {
        if !value.isEmpty {
            headers[name] = value
        }
        return self
    }

    func addCredential() -> Self {
        self.credential = self.api.credential
        return self
    }
}

protocol RequestBuilderFactory {
    func getNonDecodableBuilder<T>() -> RequestBuilder<T>.Type
    func getBuilder<T:Decodable>() -> RequestBuilder<T>.Type
}
